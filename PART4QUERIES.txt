QUERIES PART 4

--Q1. 

SELECT CATEGORY, ROUND(SUM(LINE_ITEM_SALE_PRICE),2)
FROM LINE_ITEMS, PRODUCTS 
WHERE CATEGORY = 'Furniture'
GROUP BY CATEGORY;

--Q2.

SELECT CATEGORY, ROUND(SUM(LINE_ITEM_SALE_PRICE),2) AS "TOTAL SALES"
FROM PRODUCTS, LINE_ITEMS
GROUP BY CATEGORY;

--Q3.

SELECT CATEGORY, ROUND(SUM(LINE_ITEM_SALE_PRICE),2) AS "TOTAL SALES"
FROM PRODUCTS, LINE_ITEMS
GROUP BY ROLLUP(CATEGORY);

--Q4

SELECT CATEGORY, SUB_CATEGORY, ROUND(SUM(LINE_ITEM_SALE_PRICE),2) AS "TOTAL SALES"
FROM PRODUCTS, LINE_ITEMS
GROUP BY ROLLUP(CATEGORY, SUB_CATEGORY);

--Q5

SELECT CU.CUSTOMER_ID, P.CATEGORY, P.SUB_CATEGORY, 
ROUND(SUM(LN.LINE_ITEM_SALE_PRICE),2) AS "TOTAL SALES"
FROM CUSTOMERS CU, PRODUCTS P, LINE_ITEMS LN
GROUP BY CU.CUSTOMER_ID, P.CATEGORY, P.SUB_CATEGORY;

--Q6

SELECT CU.CUSTOMER_ID, COUNT(DISTINCT O.ORDER_ID) AS "NUMBER OF ORDERS", 
ROUND(SUM(LI.LINE_ITEM_SALE_PRICE),2) AS "TOTAL SALES",
ROUND(SUM(LI.LINE_ITEM_SALE_PRICE * LI.QUANTITY),2) AS "TOTAL PROFIT"
FROM CUSTOMERS CU, ORDERS O, LINE_ITEMS LI
GROUP BY ROLLUP(CU.CUSTOMER_ID) ORDER BY "NUMBER OF ORDERS"; 

--Q7

SELECT CU.CUSTOMER_ID, COUNT(DISTINCT O.ORDER_ID) AS "NUMBER OF ORDERS", 
ROUND(SUM(LI.LINE_ITEM_SALE_PRICE),2) AS "TOTAL SALES",
ROUND(SUM((LI.LINE_ITEM_SALE_PRICE * LI.QUANTITY)*0.022),2) AS "TOTAL PROFIT"
FROM CUSTOMERS CU, ORDERS O, LINE_ITEMS LI
GROUP BY ROLLUP(CU.CUSTOMER_ID) ORDER BY "NUMBER OF ORDERS"; 

--Q8

SELECT A.STATE, A.CITY, COUNT(*) AS "NUM OF CUSTOMERS"
FROM ADDRESS A GROUP BY CUBE(A.STATE, A.CITY);

--Q9

SELECT COUNT(DISTINCT CU.CUSTOMER_ID),
  NVL(A.STATE, '========'),
  NVL(A.CITY, '=======')
FROM ADDRESS A, CUSTOMERS CU
GROUP BY ROLLUP(A.STATE, A.CITY);

--Q10

SELECT CU.CUST_FIRST_NAME, CU.CUST_LAST_NAME, O.ORDER_ID, O.ORDER_DATE, 
ROW_NUMBER() OVER(PARTITION BY CUST_FIRST_NAME, CUST_LAST_NAME ORDER BY O.ORDER_ID)
AS "RUNNING TOTAL OF ORDERS"
FROM CUSTOMERS CU, ORDERS O;

--Q11

CREATE VIEW TEMPORARY (CU.CUSTOMER_ID, "TOTAL SALES") AS
SELECT CU.CUSTOMER_ID, ROUND(SUM(LN.LINE_ITEM_SALE_PRICE),2) AS "TOTAL SALES"
FROM CUSTOMERS CU, LINE_ITEMS LI WHERE LN.ORDER_ID = O.ORDER_ID
GROUP BY ROLLUP(CU.CUSTOMER_ID);

--Q12

SELECT COUNT(*) FROM (SELECT CU.CUSTOMER_ID FROM CUSTOMERS CU 
MINUS SELECT O.CUSTOMER_ID FROM ORDERS O);

--Q13

SELECT DISTINCT P.SUB_CATEGORY, AVG(LN.LINE_ITEM_SALE_PRICE)
FROM PRODUCTS P, LINE_ITEMS LN
GROUP BY P.SUB_CATEGORY;

--Q14

SELECT A.REGION, SUM(LINE_ITEM_SALE_PRICE) AS "TOTAL SALES", A.STATE, 
SUM(LINE_ITEM_SALE_PRICE) AS "SUBTOTALS"
FROM ADDRESS A, LINE_ITEMS
GROUP BY A.REGION, A.STATE;

--Q15

SELECT O.SHIP_MODE, ROUND(SUM(LINE_ITEM_SALE_PRICE),2) AS "TOTAL SALES"
FROM ORDERS O, LINE_ITEMS
GROUP BY ROLLUP(O.SHIP_MODE);

--Q16

UPDATE ORDERS SET ORDER_DATE = TO_DATE('01/01/2000', 'MM/DD/YYYY');


SELECT SUM(LINE_ITEM_SALE_PRICE)
FROM LINE_ITEMS, ORDERS
WHERE ORDER_DATE >= to_date('01/01/' || 2013, 'MM/DD/YYYY') and
ORDER_DATE < to_date('12/31/' || (2013 + 1), 'MM/DD/YYYY');

--Q17

SELECT CUSTOMERS.CUSTOMER_ID,
  ORDERS.SHIP_MODE
FROM CUSTOMERS,
  ORDERS
WHERE ORDERS.SHIP_MODE = 'Same Day' and ORDER_DATE BETWEEN 01/01/2013 AND 12/31/2013;

--Q18

SELECT CUSTOMERS.CUSTOMER_ID, ORDERS.SHIP_DATE FROM CUSTOMERS,ORDERS
WHERE SHIP_DATE BETWEEN '01/01/2014' AND '12/31/2014' 
AND SHIP_DATE NOT BETWEEN '01/01/2015' AND '12/31/2015';