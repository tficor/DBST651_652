---------1----------
SELECT COUNT(*) AS Instructors
FROM INSTRUCTOR
WHERE INSTRUCTOR.ZIP          LIKE '10025%'
AND INSTRUCTOR.STREET_ADDRESS LIKE '518%';
---------2----------
SELECT STUDENT.ZIP,
  STUDENT.FIRST_NAME,
  STUDENT.LAST_NAME,
  ZIPCODE.CITY
FROM STUDENT
INNER JOIN ZIPCODE
ON ZIPCODE.ZIP = STUDENT.ZIP
WHERE ZIPCODE.STATE LIKE 'MA%'
ORDER BY ZIPCODE.CITY DESC,
  STUDENT.ZIP,
  STUDENT.LAST_NAME;
---------3----------
SELECT ZIPCODE.CITY,
  ZIPCODE.STATE,
  ZIPCODE.ZIP
FROM ZIPCODE
INNER JOIN STUDENT
ON ZIPCODE.ZIP = STUDENT.ZIP
INNER JOIN INSTRUCTOR
ON ZIPCODE.ZIP = INSTRUCTOR.ZIP
GROUP BY ZIPCODE.CITY,
  ZIPCODE.STATE,
  ZIPCODE.ZIP
HAVING COUNT(STUDENT.STUDENT_ID)    >= 3
AND COUNT(INSTRUCTOR.INSTRUCTOR_ID) >= 4
---------4-----------

SELECT COUNT(*) AS Student_Reside,
  COUNT(     *) AS Instructor_Count,
  ZIPCODE.CITY  AS CITY,
  ZIPCODE.STATE AS STATE
FROM ZIPCODE,
  STUDENT,
  INSTRUCTOR
WHERE ZIPCODE.ZIP = STUDENT.ZIP
AND ZIPCODE.ZIP   = INSTRUCTOR.ZIP
GROUP BY STUDENT.ZIP,
  instructor.zip,
  ZIPCODE.CITY,
  ZIPCODE.STATE

----------5-----------

SELECT INSTRUCTOR.INSTRUCTOR_ID,
  INSTRUCTOR.FIRST_NAME,
  INSTRUCTOR.LAST_NAME
FROM INSTRUCTOR,
  SECTION
WHERE INSTRUCTOR.INSTRUCTOR_ID = SECTION.INSTRUCTOR_ID
GROUP BY INSTRUCTOR.INSTRUCTOR_ID,
  INSTRUCTOR.FIRST_NAME,
  INSTRUCTOR.LAST_NAME
HAVING COUNT(SECTION.SECTION_NO) < 10
----------6----------

SELECT STUDENT.STUDENT_ID,
  STUDENT.FIRST_NAME,
  STUDENT.LAST_NAME,
  STUDENT.REGISTRATION_DATE
FROM STUDENT
WHERE STUDENT.REGISTRATION_DATE >= '23-FEB-2007'
-----------7-----------------


SELECT STUDENT.STUDENT_ID,
  STUDENT.FIRST_NAME,
  STUDENT.LAST_NAME,
  SECTION.SECTION_ID
FROM SECTION
INNER JOIN INSTRUCTOR
ON INSTRUCTOR.INSTRUCTOR_ID = SECTION.INSTRUCTOR_ID,
  STUDENT
WHERE INSTRUCTOR.FIRST_NAME = 'Todd'
AND INSTRUCTOR.LAST_NAME    = 'Smythe'
-----------8------------------

SELECT STUDENT.FIRST_NAME,
  STUDENT.LAST_NAME,
  GRADE.GRADE_TYPE_CODE,
  GRADE.NUMERIC_GRADE
FROM COURSE,
  STUDENT,
  SECTION,
  GRADE
WHERE COURSE.COURSE_NO  = SECTION.COURSE_NO
AND COURSE.DESCRIPTION  = 'Advanced Java Programming'
AND GRADE.NUMERIC_GRADE > 95

-----------9-----------

SELECT INSTRUCTOR.FIRST_NAME,
  INSTRUCTOR.LAST_NAME,
  COURSE.DESCRIPTION
FROM INSTRUCTOR,
  COURSE,
  SECTION
WHERE INSTRUCTOR.INSTRUCTOR_ID = SECTION.INSTRUCTOR_ID
AND COURSE.COURSE_NO           = SECTION.COURSE_NO
AND COURSE.DESCRIPTION         = 'Advanced Java Programming'
GROUP BY INSTRUCTOR.FIRST_NAME,
  INSTRUCTOR.LAST_NAME,
  COURSE.DESCRIPTION

-----------10-------------

SELECT SECTION.SECTION_ID,
  AVG(GRADE.NUMERIC_GRADE) AS Avg_NUMERIC_GRADE,
  MIN(GRADE.NUMERIC_GRADE) AS Min_NUMERIC_GRADE,
  MAX(GRADE.NUMERIC_GRADE) AS Max_NUMERIC_GRADE
FROM SECTION,
  INSTRUCTOR,
  COURSE,
  GRADE
WHERE INSTRUCTOR.INSTRUCTOR_ID = SECTION.INSTRUCTOR_ID
AND COURSE.COURSE_NO           = SECTION.COURSE_NO
AND INSTRUCTOR.INSTRUCTOR_ID   = 106
AND GRADE.GRADE_TYPE_CODE      = 'FI'
GROUP BY SECTION.SECTION_ID,
  GRADE.GRADE_TYPE_CODE